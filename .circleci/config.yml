version: 2.1

jobs:
  scan:
    docker:
      - image: cimg/node:20.12
    steps:
      - checkout

      # Java for the Sonar scanner
      - run:
          name: Install Java 17
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jre-headless
            java -version

      # Install deps
      - run:
          name: Install dependencies
          command: |
            npm ci || true
            npm --prefix backend ci
            npm --prefix frontend ci || true

      # SonarScanner CLI
      - run:
          name: Install SonarScanner CLI
          command: |
            SCANNER_VERSION=5.0.1.3006
            curl -sSLo /tmp/sonar.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SCANNER_VERSION}-linux.zip
            unzip -q /tmp/sonar.zip -d $HOME
            mv $HOME/sonar-scanner-* $HOME/sonar-scanner
            echo 'export PATH="$HOME/sonar-scanner/bin:$PATH"' >> $BASH_ENV
            # Bump heap and keep PKCS12 to avoid SSL weirdness
            echo 'export SONAR_SCANNER_OPTS="-Xmx2048m -Djavax.net.ssl.trustStoreType=pkcs12"' >> $BASH_ENV
            source $BASH_ENV
            sonar-scanner -v

      # Sonar scan (frontend + backend) with keepalive + extra Node space
      - run:
          name: SonarCloud scan (frontend + backend, keepalive)
          no_output_timeout: 45m
          command: |
            source $BASH_ENV

            # keep CircleCI output alive while sonar-scanner is quiet
            ( while true; do echo "[keepalive] Sonar scan still running: $(date -u)"; sleep 60; done ) &
            KEEPALIVE_PID=$!

            sonar-scanner \
              -Dsonar.host.url=${SONAR_HOST_URL:-https://sonarcloud.io} \
              -Dsonar.token=${SONAR_TOKEN} \
              -Dsonar.projectKey=${SONAR_PROJECT_KEY:-herkeens_test} \
              -Dsonar.organization=${SONAR_ORG:-herkeens} \
              -Dsonar.scm.disabled=true \
              -Dsonar.cpd.exclusions=**/*.min.js,**/*.bundle.js \
              -Dsonar.scanner.skipSystemTruststore=true \
              -Dsonar.javascript.node.maxspace=4096

            kill $KEEPALIVE_PID

  deps-audit:
    docker:
      - image: cimg/node:20.12
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm --prefix backend ci
            npm --prefix frontend ci || true
      - run:
          name: Audit Dependencies (SCA)
          command: |
            mkdir -p reports
            npm --prefix backend audit --audit-level=high --json > reports/backend-audit.json || true
            npm --prefix frontend audit --audit-level=high --json > reports/frontend-audit.json || true
      - store_artifacts:
          path: reports

  zap-baseline:
    docker:
      - image: ghcr.io/zaproxy/zaproxy:stable
    steps:
      - checkout
      - run:
          name: ZAP Baseline Scan (DAST)
          command: |
            mkdir -p zap
            # Point to a reachable HTTPS API (staging URL works best)
            zap-baseline.py \
              -t https://localhost:8443 \
              -r zap/zap-report.html \
              -d || true
      - store_artifacts:
          path: zap

workflows:
  security-pipeline:
    jobs:
      - scan:
          context: SonarCloud
      # keep SCA/DAST on main to save minutes
      - deps-audit:
          filters:
            branches:
              only: main
      - zap-baseline:
          filters:
            branches:
              only: main
